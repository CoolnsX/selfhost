services:
  postgres:
    container_name: postgres
    image: postgres:alpine
    restart: unless-stopped
    volumes:
      - $DATABASE_DIR:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_USER=dendrite
      - POSTGRES_DATABASE=dendrite
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dendrite"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks: 
      - nginx_proxy

  dendrite:
    container_name: dendrite
    image: matrixdotorg/dendrite-monolith:latest
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - TZ=$TZ
    networks:
      - nginx_proxy
    volumes:
      - ./config:/etc/dendrite
      - ./dendrite:/var/dendrite

  element:
    container_name: element
    image: vectorim/element-web:latest
    restart: unless-stopped
    volumes:
      - $ELEMENT_CONFIG_JSON:/app/config.json
    networks:
      - nginx_proxy

networks:
  nginx_proxy:
    external: true
